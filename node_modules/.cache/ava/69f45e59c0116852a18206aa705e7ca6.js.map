{"version":3,"sources":["process.spec.js"],"names":["expect","require","test","serial","process","handlers","execute","key","step","steps","handler","id","result","state","in"],"mappings":";;AAAA,MAAMA,SAASC,QAAQ,YAAR,CAAf;AACA,MAAMC,OAAOD,QAAQ,KAAR,EAAeE,MAA5B;;AAEA,MAAMC,UAAUH,QAAQ,oBAAR,CAAhB;AACA,MAAMI,WAAWJ,QAAQ,YAAR,CAAjB;;AAEA,MAAMK,UAAWC,GAAD,IAAS;AACrB,UAAMC,OAAOJ,QAAQK,KAAR,CAAcF,GAAd,CAAb;AACA,UAAMG,UAAUL,SAASG,KAAKG,EAAd,CAAhB;AACA,UAAMC,SAASF,QAAQG,KAAR,EAAeL,KAAKM,EAApB,CAAf;AACAd,WAAOY,MAAP,EAAe,YAAf,EAA6BJ,KAAKR,MAAlC;AACH,CALD;;AAOA,IAAIa,QAAQ,EAAZ;;AAEAX,KAAK,iBAAL,EAAwB,MAAM;AAC1BI,YAAQF,QAAQK,KAAR,CAAc,CAAd,EAAiBE,EAAzB;AACH,CAFD","file":"process.spec.js","sourcesContent":["const expect = require('unexpected');\nconst test = require('ava').serial;\n\nconst process = require('./fixtures/process');\nconst handlers = require('./handlers');\n\nconst execute = (key) => {\n    const step = process.steps[key];\n    const handler = handlers[step.id];\n    const result = handler(state, step.in);\n    expect(result, 'to satisfy', step.expect);\n};\n\nlet state = {};\n\ntest('1. Create Order', () => {\n    execute(process.steps[0].id);\n});"]}